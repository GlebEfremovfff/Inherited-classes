Условия
• Разработать базовый абстрактный класс Figure с чистой виртуальной функцией print
для вывода в дальнейшем полной информации об объекте: точки, площадь, периметр
и т. д.
• Разработать производный от Figure класс и класс, производный от производного, с
полями и функциями, которые указываются в варианте задания. Если в варианте
задания геометрическая фигура задается координатами точек, обязательно
использовать вспомогательный класс точки Point для построения классов
геометрических фигур. Функции в разных классах перегружаются.
• Весь проект разбить на заголовочные файлы.h и файлы реализаций.cpp.
• В файле с входными данными данные для объектов разных классов хранятся
вперемешку построчно (одна строка-один объект), причем первым в строке хранится
числовой код класса, к которому принадлежит объект.
• Создать функцию №1, которая считывает все данные из файла в один контейнер STL
любого типа на выбор, содержащий указатели на объекты базового абстрактного
класса Figure.
• Создать функцию №2, которая выводит на экран полную информацию о фигурах из
контейнера, включая название класса фигуры.
• Создать функцию №3, которая решает задачу типа нахождения максимума для фигур
2-х классов из контейнера (определяется вариантом). В этой функции необходимо
сделать динамическую идентификацию типов с помощью операции dynamic_cast и,
может быть, операции typeid.
• Контроль за корректностью исходных данных в файле выполнить в конструкторах
классов через механизм исключений.
• Скомпилировать программу в 2 библиотеки – динамическую и статическую.
Продемонстрировать работоспособность библиотек, создав 2 приложения с их
подключением.

Производный от Figure класс треугольника общего вида. Его поля: две стороны и угол
между ними. Функции класса вычисляют углы, периметр, площадь. Производный от
класса треугольника общего вида класс прямой призмы с дополнительным полем 
высоты. Функции этого класса: площадь поверхности и объем. В функции №3 найти
треугольник с максимальной площадью и призму с максимальной диагональю
